# $Id: screen-keys.conf,v 1.7 2010-07-31 11:39:13 nicm Exp $
# Tmux config
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.


#source ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf

# Terminal compatibility fixes for proper rendering
set-option -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',xterm-256color:RGB'
set-option -sa terminal-overrides ',screen-256color:RGB'
set-option -sa terminal-overrides ',tmux-256color:RGB'

# UTF-8 support (for tmux < 2.2, ignored in newer versions)
#set-option -g status-utf8 on
#set-option -g utf8 on

# Status bar settings
set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/.config/powerline/themes/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/.config/powerline/themes/tmux-powerline/powerline.sh right)"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'laktak/extrakto'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @continuum-restore 'on'


new-session -n $HOST
# Set the prefix to ^A.
unbind C-b
set -g prefix ^J
bind a send-prefix
# set scrollback history to 10000 (10k)
    set -g history-limit 1000000
# reload ~/.tmux.conf using PREFIX r
    bind R source-file ~/.tmux.conf \; display "Reloaded!"

# Enable mouse support
set -g mouse on

# Fix escape time delay (important for vim/neovim)
set -sg escape-time 0

# Increase display time of pane numbers
set -g display-panes-time 2000
# Example of using a shell command in the status line
set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# Set status bar
set -g status-bg black
set -g status-fg white
set -g status-left ""
set -g status-right "#[fg=green]#H"

#set -g mouse on
set-option -g mouse on

# Bind appropriate commands similar to screen.
# lockscreen ^X x 
unbind ^X
unbind M-r
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c 
unbind ^C
bind ^C new-window
unbind c
bind c new-window -c "#{pane_current_path}"

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# next ^@ ^N sp n 
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^? 
unbind ^H
bind ^H previous-window

unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w 
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \ 
bind q confirm-before "kill-server"

# kill K k 
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l 
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# send command to all panes
bind C-a setw synchronize-panes 

# use PREFIX | to split window horizontally and PREFIX - to split vertically
    bind | split-window -h -c "#{pane_current_path}"
    bind - split-window -v -c "#{pane_current_path}"
# split -v |
#unbind |
#bind | split-window
#unbind -
#bind - split-window \; select-layout

# :kB: focus up
#unbind Tab
#bind Tab select-pane -t:.+
#unbind BTab
#bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window

# Mouse support - set to on if you want to use the mouse
 #set -g mode-mouse on
 #set -g mouse-select-pane on
 #set -g mouse-resize-pane on
 #set -g mouse-select-window on
 set-window-option -g mode-keys vi
 bind h select-pane -L
 bind j select-pane -D
 bind k select-pane -U
 bind l select-pane -R

# show host name and IP address on left side of status bar
#    set -g status-left-length 70
#    set -g status-left "#[fg=green]: #h : #[fg=brightblue]#(curl http://www.nikun.net/moroip.php) #[fg=yellow]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "

    # show session name, window & pane number, date and time on right side of
    # status bar
#    set -g status-right-length 60
#    set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]:: %l:%M %p :: #(date -u | awk '{print $4}')::"



# # Other examples:
# # set -g @plugin 'github_username/plugin_name'
# # set -g @plugin 'git@github.com/user/plugin'
# # set -g @plugin 'git@bitbucket.com/user/plugin'
#
# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run-shell ~/.tmux/plugins/extrakto/extrakto.tmux

set -g @shell_mode 'vi'

run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux
run '~/.tmux/plugins/tpm/tpm'
